  # This is a basic workflow to help you get started with Actions
  
  name: build_mainline_linux_kernel
  
  # Controls when the workflow will run
  on:
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
  
  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
  jobs:
    # This workflow contains a single job called "build"
    build:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
  
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v4
  
        # Runs a single command using the runners shell
        - name: Run a one-line script
          run: |
            echo Hello, world!
            sudo apt-get update
            sudo apt install -y \
            build-essential openssl pkg-config libssl-dev libncurses-dev minizip libelf-dev flex bison libc6-dev libidn11-dev rsync bc lz4 debootstrap git curl \
            gcc-aarch64-linux-gnu dpkg-dev dpkg qemu-user-static \
            debhelper-compat libdw-dev libssl-dev

        - name: Install libssl-dev:arm64
          run: |
            sudo dpkg --add-architecture arm64
            sudo cp /etc/apt/sources.list.d/ubuntu.sources /etc/apt/sources.list.d/ubuntu.sources.bak
            sudo tee /etc/apt/sources.list.d/ubuntu.sources > /dev/null << EOF
            Types: deb
            URIs: http://ports.ubuntu.com/ubuntu-ports
            Suites: noble noble-updates noble-backports
            Components: main universe restricted multiverse
            Architectures: arm64
            Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
            Types: deb
            URIs: https://ports.ubuntu.com/ubuntu-ports
            Suites: noble-security
            Components: main universe restricted multiverse
            Architectures: arm64
            Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
            EOF
            sudo apt clean
            sudo apt update
            sudo apt install libssl-dev:arm64 -y
            
  
        # Runs a set of commands using the runners shell
        - name: Run Download .config script
          run: |
            echo Add other actions to build,
            echo test, and deploy your project.
            uname -a
            pwd
            wget https://gitlab.postmarketos.org/postmarketOS/pmaports/-/raw/master/device/community/linux-postmarketos-qcom-msm8953/config-postmarketos-qcom-msm8953.aarch64
            cp config-postmarketos-qcom-msm8953.aarch64 .config
            ls -la
            pwd
            cp ${{ github.workspace }}/.config ${{ github.workspace }}/config
            ls -la
            pwd

        - name: Run Download Kernel
          run: |
            git clone --depth=1 -b 6.15/main https://github.com/msm8953-mainline/linux.git kernel
            pwd
            ls -la
            cp ${{ github.workspace }}/config-postmarketos-qcom-msm8953.aarch64 kernel/.config
            cd kernel
            #make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=aarch64-linux-gnu-gcc -j$(nproc)
            #make -j$(nproc) ARCH=arm64 KBUILD_DEBARCH=arm64 KDEB_CHANGELOG_DIST=mobile CROSS_COMPILE=aarch64-linux-gnu- CC=aarch64-linux-gnu-gcc bindeb-pkg
            make -j$(nproc) ARCH=arm64 KBUILD_DEBARCH=arm64 KDEB_CHANGELOG_DIST=mobile CROSS_COMPILE=aarch64-linux-gnu- CC=aarch64-linux-gnu-gcc dtbs
            pwd
            ls -la

        - name: 设置 Git 用户信息
          run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"

        - name: 提交并推送 config 文件
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            pwd
            ls -l ${{ github.workspace }}/kernel/arch/arm64/boot/dts/qcom/*gemini.dtb
            ls -la
            ls -l kernel/arch/arm64/boot/dts/qcom/*gemini.dtb
            #git add config
            git add kernel/arch/arm64/boot/dts/qcom/msm8996-xiaomi-gemini.dtb
            #git add kernel/arch/arm64/boot/Image.gz
            git commit -m "自动提交"
            git push origin HEAD:${{ github.ref }}
            
